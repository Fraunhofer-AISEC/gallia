# SPDX-FileCopyrightText: AISEC Pentesting Team
#
# SPDX-License-Identifier: CC0-1.0

# https://github.com/astral-sh/uv/issues/3957
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "gallia"
version = "2.0.0a0"
description = "Extendable Pentesting Framework"
readme = "README.md"
authors = [{name = "AISEC Pentesting Team"}]
maintainers = [
    { name = "Stefan Tatschner", email = "stefan.tatschner@aisec.fraunhofer.de" },
    { name = "Tobias Specht", email = "tobias.specht@aisec.fraunhofer.de" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Security",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.12,<3.14"
dependencies = [
    "aiosqlite >=0.18",
    "argcomplete >=2,<4",
    "boltons>=24.1.0",
    "construct >=2.10,<3.0",
    "platformdirs >=2.6,<5.0",
    "pydantic >=2.0,<3.0",
    "tabulate >=0.9",
    "zstandard >=0.19",
]

[project.entry-points."gallia_plugins"]
"uds" = "gallia.plugins.uds:UDSPlugin"
"xcp" = "gallia.plugins.xcp:XCPPlugin"

[project.scripts]
"gallia" = "gallia.cli.gallia:main"
"netzteil" = "gallia.cli.netzteil:main"
"cursed-hr" = "gallia.cli.cursed_hr:main"
"hr" = "gallia.cli.hr:main"

# TODO: Change to dependency-groups once https://github.com/pypa/pip/issues/12963 is resolved
[project.optional-dependencies]
dev = [
    "Sphinx >=8.0",
    "commitizen>=4.1.0",
    "construct-typing >=0.5.2,<0.7.0",
    "mypy >=1.0,<2.0",
    "myst-parser >=3.0.1,<4.1",
    "pylsp-mypy >=0.6,<0.7",
    "pylsp-rope >=0.1,<0.2",
    "pytest >=7.1,<9.0",
    "pytest-asyncio >=0.20,<0.25",
    "pytest-cov >=4,<6",
    "python-lsp-server >=1.5,<2.0",
    "reuse >=4.0,<5.0",
    "ruff >=0.8.0",
    "rust-just>=1.38.0",
    "sphinx-rtd-theme >=3",
    "types-tabulate >=0.9,<0.10",
]

[project.urls]
Documentation = "https://fraunhofer-aisec.github.io/gallia"
Repository = "https://github.com/Fraunhofer-AISEC/gallia"
"Bug Tracker" = "https://github.com/Fraunhofer-AISEC/gallia/issues"

[tool.mypy]
strict = true
plugins = [
    "pydantic.mypy"
]

[tool.ruff]
target-version = "py312"
line-length = 100
exclude = ["docs/"]

[tool.ruff.lint]
select = [
    # TODO: Enable this
    # "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "ASYNC",# flake8-async
    "C4",   # flake8-comprehensions
    "E",    # pycodestlye
    "F",    # pyflakes
    "FA",   # flake8-future-annotations
    "FLY",  # flynt
    "FURB", # refurb
    "I",    # isort
    "IC",   # flake8-import-conventions
    "LOG",  # flake8-logging
    "PIE",  # flake8-pie
    "PL",   # pylint
    "PTH",  # flake8-use-pathlib
    "Q",    # flake8-quotes
    "RSE",  # flake8-raise
    "TID",  # flake8-tidy-imports
    "TD",   # flake8-todos
    "UP",   # pyupgrade
]
ignore = [
    "ASYNC109", # Async function definition with a timeout parameter
    "E402",     # Module level import not at top of file
    "E501",     # line length
    "PLR2004",  # magic value used in comparison
    "PLR0911",  # too many return statements
    "PLR0912",  # too many branches
    "PLR0913",  # too many arguments to function call
    "PLR0915",  # too many statements
    "PLC1901",  # empty string is falsey
    "TD001",    # Invalid TODO tag: {tag}
    "TD002",    # Missing author in TODO; try: # TODO(<author_name>): ... or # TODO @<author_name>: ...
    "TD003",    # Missing issue link on the line following this TODO
    "UP040",    # Type alias uses `TypeAlias` annotation instead of the `type` keyword
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "error::UserWarning",
]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "pep621"
annotated_tag = true
