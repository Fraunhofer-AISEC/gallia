# SPDX-FileCopyrightText: AISEC Pentesting Team
#
# SPDX-License-Identifier: CC0-1.0

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "gallia"
version = "1.1.3"
description = "Extendable Pentesting Framework"
license = "Apache-2.0"
readme = "README.md"
documentation = "https://fraunhofer-aisec.github.io/gallia"
repository = "https://github.com/Fraunhofer-AISEC/gallia"
authors = ["AISEC Pentesting Team"]
maintainers = [
    "Stefan Tatschner <stefan.tatschner@aisec.fraunhofer.de>",
    "Tobias Specht <tobias.specht@aisec.fraunhofer.de>",
]
keywords = ["pentesting", "automotive", "uds"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: AsyncIO",
    "Operating System :: POSIX :: Linux",
]
packages = [
    { include = "gallia", from = "src" },
    { include = "cursed_hr", from = "src" },
    { include = "hr", from = "src" },
    { include = "opennetzteil", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
aiohttp = "^3.8"
aiofiles = ">=22.1,<24.0"
aiosqlite = ">=0.18"
argcomplete = "^2.0"
zstandard = ">=0.19"
python-can = "^4.0"
tabulate = ">=0.9"
construct = "^2.10.67"
tomli = { version = "^2.0", python = "<3.11" }
msgspec = ">=0.11,<0.14"
pydantic = "^1.10"
pygit2 = "^1.10"
platformdirs = ">=2.6,<4.0"
exitcode = "^0.1.0"
tomlkit = "^0.11.6"

[tool.poetry.group.dev.dependencies]
black = "^22.10"
Sphinx = "^5.2"
mypy = "^1.0"
pylsp-mypy = "^0.6"
pylsp-rope = "^0.1"
pytest = "^7.1"
pytest-asyncio = "^0.20"
python-lsp-black = "^1.1"
python-lsp-server = "^1.5"
types-aiofiles = "^22.1"
types-tabulate = "^0.9"
myst-parser = "^0.18"
sphinx-rtd-theme = "^1.0"
reuse = "^1.0.0"
construct-typing = "^0.5.2"
pytest-cov = "^4.0"
ruff = "^0.0.253"
python-lsp-ruff = "^1.1.0"

[tool.poetry.scripts]
"gallia" = "gallia.cli:main"
"netzteil" = "opennetzteil.cli:main"
"cursed-hr" = "cursed_hr.cursed_hr:main"
"hr" = "hr:main"

[tool.mypy]
plugins = [
    "pydantic.mypy"
]
strict = true

[[tool.mypy.overrides]]
module = [
    "argcomplete",
    "pygit2",
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py310"
select = [
    "C4",   # flake8-comprehensions
    "E",    # pycodestlye
    "F",    # pyflakes
    "I",    # isort
    "PL",   # pylint
    "PTH",  # flake8-use-pathlib
    "TID",  # flake8-tidy-imports
    "UP",   # pyupgrade
]
ignore = [
    "E501",     # line length
    "PLR2004",  # magic value used in comparison
    "PLR0911",  # too many return statements
    "PLR0912",  # too many branches
    "PLR0915",  # too many statements
]

[tool.black]
target-version = ['py310']

[tool.pytest.ini_options]
asyncio_mode = "auto"
