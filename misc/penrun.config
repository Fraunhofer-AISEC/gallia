# SPDX-FileCopyrightText: AISEC Pentesting Team
#
# SPDX-License-Identifier: Apache-2.0

################################################################################
# Penrun config
# NOTE: These variables are sourced by the shell.
# They are not required to be exported, but could be.

# If this variable is set then penrun creates the artifacts folder hierarchy
# at this location instead of $PWD.
#
PENRUN_ARTIFACTS_BASE="$HOME/penrun-artifacts"

# This variable specifies the compression tool where the output is piped
# to. Since zstd provides multithreading capabilities, it is the fastest
# in all out-of-the-box scenarios. Argument must be a bash array.
#
# PENRUN_COMPRESSION_COMMAND=("gzip" "--stdout")
PENRUN_COMPRESSION_COMMAND=("zstd" "-T0")

# Specify the extension that is added to the OUTPUT file.
PENRUN_OUTPUT_EXTENSION=".zst"

# Pipe penrun output to HR
# Argument must be a bash array.
PENRUN_PIPE_COMMAND=("hr" "-p" "info")

# Add Default arguments which be appended to each penrun run
# Argument must be a bash array.
# PENRUN_DEFAULT_ARGS=(--verbose)

# Lock on a specifc file
# Useful to make sure, that only one instance of penrun can access a particular resource
# PENRUN_LOCK="/path/to/lock"

# Create a useful folder structure when the unified `gallia` entry point is used.
cmd_to_artifactsdir() {
    local artifactsdir="$1"
    local artifactsdir_base="$(dirname "$(dirname "${artifactsdir}")")"
    local run_dir="$(basename "${artifactsdir}")"
    local tag="$3"
    local cmd_arr
    read -r -a cmd_arr <<< "$4"

    if [[ "${cmd_arr[0]}" == "gallia" ]] && (( "${#cmd_arr[@]}" >= 2 )) ; then
        local sub_cmd=$(basename "${cmd_arr[1]}")
        if [[ -n "$tag" ]]; then
            echo "$artifactsdir_base/$sub_cmd-$tag/$run_dir"
        else
            echo "$artifactsdir_base/$sub_cmd/$run_dir"
        fi
    else
        echo "$artifactsdir"
    fi
}

################################################################################
# Penlog config

# Setting this environmental variable enforces color escape codes.
# It is best practice to disable color escape codes when the relevant output
# streams are redirected to a file or a pipe.
#
# export PENLOG_FORCE_COLORS="True"

# A switch for implementations to choose from several output forms.
# Available are: hr, hr-tiny, json, json-pretty, systemd
#
export PENLOG_OUTPUT="json"

# [Expert/Development]
# Enable the display of line numbers.
# Requires PENLOG_CAPTURE_LINES to be set.
#
# export PENLOG_SHOW_LINES="True"

# [Expert/Development]
# Enable the display of stacktraces.
# Requires ENLOG_CAPTURE_STACKTRACES to be set.
#
# export PENLOG_SHOW_STACKTRACES="True"

# [Expert/Development]
# If this environment variable is set, implementations SHOULD emit filenames
# with line numbers via the line field.
#
# export PENLOG_CAPTURE_LINES="True"

# [Expert/Development]
# If this environment variable is set, implementations SHOULD provide
# stacktraces via the stacktrace field.
#
# export PENLOG_CAPTURE_STACKTRACES="True"

# [Expert/Development]
# In order to limit the emitted logging messages, loglevels MAY be supported.
# If a library supports filtering based on loglevels, it MUST check this
# environment variable.
# The supported values are critical, error, warning, notice, info, debug.
# The default MUST be debug. A message MUST be omitted if its priority field
# contains a value greater than PENLOG_LOGLEVEL. A mapping between these strings
# and integer values is availabe in RFC5424.
#
# export PENLOG_LOGLEVEL="debug"


################################################################################
# Gallia config

# Define the OEM of the ECU in order to utilize OEM specific code
#
export GALLIA_OEM="default"

# Define the transport protocol the scanner is going to use.
# The target needs to be specified as an URI.
#
export GALLIA_TARGET="isotp://can0?src_addr=0x714&dst_addr=0x77e&tx_padding=0xaa&rx_padding=0xaa&is_fd=false"

# Limit the width of the --help output to this number of chars.
#
#export GALLIA_HELP_WIDTH=100

# Set the path to the sqlite database
# export GALLIA_DB=/path/to/db


################################################################################
# Miscellaneous config

# Perform this function prior to each penrun run.
# Can be used e.g. for power cycles or sending triggers
pre_run() {
    echo "I am a pre_run hook!"
}

# Perform this function after to each penrun run.
post_run() {
    echo "I am a post_run hook!"
}
